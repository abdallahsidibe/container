services:
  backend:
    build: ./bank-service
    container_name: container-app-java
    secrets:
      - db_password
    ports:
      - "8081:8081"
    depends_on:
      - mysql # nom du service
    restart: unless-stopped
    networks:
      - app-network


  mysql:
    image: mysql:8.0.40-debian
    container_name: container-mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE_FILE: /run/secrets/mysql_database
      MYSQL_USER_FILE: /run/secrets/mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
    secrets:
      - mysql_root_password
      - mysql_database
      - mysql_user
      - mysql_user_password
    ports:
      - "3306:3306"
    volumes: # montage du volume
      - mysql_data:/var/lib/mysql # repertoire d'installation de mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD # tester la santé du service
    networks:
      - app-network

  phpmyadmin:
    container_name: container-phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "8082:80"
    secrets:
      - db_password
    depends_on:
      - mysql
    restart: unless-stopped # redemarre juqua disponibilite de service mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

secrets:
  mysql_root_password:
    file: mysql_root_password.txt
  mysql_database:
    file: mysql_database.txt
  mysql_user:
    file: mysql_user.txt
  mysql_user_password:
    file: mysql_user_password.txt
  db_password:
    file: db_password.txt

# création du volume
volumes:
  mysql_data:
    driver: bridge # où se trouve le engine: docker va le gerer lui meme le driver c'est pour le volume
