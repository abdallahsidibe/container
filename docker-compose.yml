services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  whoami:
    # A container that exposes an API to show its IP address
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"

  backend:
    build:
      context: ./bank-service
      dockerfile: Dockerfile
    container_name: container-app-java
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-router.rule=Host(`backend.local`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    environment:
      #jdbc:mysql://localhost:3306/E-BANK?createDatabaseIfNotExist=true
      DB_URL: jdbc:mysql://mysql:3306/dockertraefik # connecte la bd via le reseau mysql vs localhost
      DB_USER: root
      DB_PASSWORD:
    depends_on:
      - mysql # nom du service
    restart: unless-stopped

  frontend:
    build: ./bank-web
    container_name: container-app-angular
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-router.rule=Host(`frontend.local`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

    volumes:
      - ./bank-web:/project
      - /project/node_modules

  mysql:
    image: mysql:8.0.40-debian
    container_name: container-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dockertraefik
      MYSQL_USER: sidibe
      MYSQL_PASSWORD: passer123@
    ports:
      - "3306:3306"
    volumes: # montage du volume
      - mysql_data:/var/lib/mysql # repertoire d'installation de mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD # tester la santé du service
    networks:
      - app-network

  phpmyadmin:
    container_name: container-phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "8082:80"
    env_file:
      - ./.env
    depends_on:
      - mysql
    restart: unless-stopped # redemarre juqua disponibilite de service mysql
    networks:
      - app-network

networks:
#  traefik-network:
#    driver: bridge
  app-network:
    driver: bridge

# création du volume
volumes:
  mysql_data:
    driver: bridge # où se trouve le engine: docker va le gerer lui meme le driver c'est pour le volume

